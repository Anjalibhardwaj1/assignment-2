; http://tpcg.io/KDCTS5 
(defun eliminateDuplicates (lst1)
    (cond
        ((null lst1) '())
        ((member (car lst1) (cdr lst1)) (eliminateDuplicates (cdr lst1)))
        (t (cons (car lst1) (eliminateDuplicates (cdr lst1))))
    )
)

;(print(eliminateDuplicates '(1 2 3 4 1 2 3 5 6)))

(defun eliminateNonNumbers (lst1)
    (cond
        ((null lst1) '())
        ((and (not (numberp (car lst1))) (not (listp (car lst1)))) (eliminateNonNumbers (cdr lst1)))
        (t (cons (car lst1) (eliminateNonNumbers (cdr lst1))))
    )
)

;(print (eliminateNonNumbers '(a 1 (3 a) (3 2.5) b c d 3 4 5.2)))

(defun flatList (lst1)
    (if
        (null lst1) '()
        (if
            (atom (car lst1))
            (cons (car lst1) (flatList (cdr lst1)))
            (append (flatList (car lst1)) (flatList (cdr lst1)))
        )
    )
)
;(print (flatList '((1 2) 3 4)))

;(print (flatList '(1 2 (3 1) (a 2.5) (2 4.5) ((1 2)))))
;(print (eliminateNonNumbers '(1 2 3 1 A 2.5 2 4.5 1 2)))
;(print (eliminateDuplicates '(1 2 3 1 2.5 2 4.5 1 2)))
;(print (remove-duplicates '(1 2 3 1 2.5 2 4.5 1 2)))

;use output of one function as input of other function, paramter lst1 not in ()
(defun flatten-nums-nodup (lst1)
    (reverse(eliminateDuplicates(eliminateNonNumbers(reverse(flatList lst1)))))
)

(print (flatten-nums-nodup '(1 2 (3 1) (a 2.5) (2 4.5) ((1 2)))))

